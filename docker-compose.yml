version: '3.2'

services:
  cfssl:
    image: cfssl/cfssl
    restart: 'no'
    entrypoint: /bin/bash
    command:
      - /etc/sslconf/gen_crt.sh
    volumes:
      - ./config/cfssl:/etc/sslconf:ro
      - ./data/ssl/internal:/etc/ssl:rw
      - ./data/ssl/public:/etc/tmp_ssl:rw

  database:
    image: postgres:alpine
    restart: unless-stopped
    volumes:
      - database:/var/lib/postgresql/data
      - ./one_time_config/postgresql.init:/docker-entrypoint-initdb.d:ro
    env_file: 
      - postgre.env
      - authentik_postgres.env
      - hass_postgres.env
    networks:
      - backbone
  
  nginx:
    image: nginx:stable-alpine
    restart: unless-stopped
    ports:
      - 443:443
      - 80:80
    volumes:
      - ./config/nginx:/etc/nginx/conf.d:ro
      - ./data/ssl/public/auth.tetofonta.local:/etc/ssl/auth.tetofonta.local:ro
    depends_on:
      - authentik_server
    networks:
      - auth
      - ingress
      - hass
      - mgnmt
  
  redis:
    image: bitnami/redis
    restart: unless-stopped
    env_file:
      - redis.env
      - authentik_redis.env
    networks:
      - auth

  authentik_server:
    image: ghcr.io/goauthentik/server:2022.4.1
    restart: unless-stopped
    depends_on:
      - cfssl
      - database
      - redis
      - geoipupdate
    command: server
    env_file:
      - authentik.env
      - authentik_postgres.env
      - authentik_redis.env
    volumes:
      - ./one_time_config/authentik.init:/init:ro
      - ./data/authentik/media:/media
      - ./data/authentik/custom-templates:/templates
      - geoip:/geoip
    networks:
      - backbone
      - auth
  
  authentik_worker:
    image: ghcr.io/goauthentik/server:2022.4.1
    restart: unless-stopped
    command: worker
    depends_on:
      - cfssl
      - database
      - redis
      - geoipupdate
    env_file:
      - authentik.env
      - authentik_postgres.env
      - authentik_redis.env
    user: root
    volumes:
      - ./data/authentik/media:/media
      - ./data/authentik/custom-templates:/templates
      - ./data/ssl/internal/certs/authentik:/certs/authentik
      - /var/run/docker.sock:/var/run/docker.sock
      - geoip:/geoip
    networks:
      - backbone
      - auth
  
  geoipupdate:
    image: "maxmindinc/geoipupdate:latest"
    volumes:
      - "geoip:/usr/share/GeoIP"
    env_file:
      - geoip.env
    networks:
      - auth

volumes:
  database:
    driver: local
  geoip:
    driver: local

networks:
  backbone:
    ipam:
      config:
        - subnet: 172.0.0.0/16
  auth:
    ipam:
      config:
        - subnet: 172.1.0.0/16
  ingress:
    ipam:
      config:
        - subnet: 172.254.0.0/16
  hass:
    ipam:
      config:
        - subnet: 172.2.0.0/16
  mgnmt:
    ipam:
      config:
        - subnet: 172.253.0.0/16