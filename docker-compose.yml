version: '3.2'

services:
  cfssl:
    build:
      dockerfile: cfssl.dockerfile
      context: images/cfssl
    restart: unless-stopped
    volumes:
      - ./config/cfssl:/etc/sslconf:ro
      - ${DATA_DIRECTORY:-./data}/ssl/internal:/etc/ssl:rw
      - ${DATA_DIRECTORY:-./data}/ssl/public:/etc/tmp_ssl:rw
      - ./config/cronjobs/cfssl.cron:/cronjob/root:ro

    env_file:
      - env/certbot.env

  database:
    image: postgres:12-alpine
    restart: unless-stopped
    volumes:
      - ${DATA_DIRECTORY:-./data}/postgresql:/var/lib/postgresql/data:rw
      - ./one_time_config/postgresql.init:/docker-entrypoint-initdb.d:ro
    env_file: 
      - env/postgre.env
      - env/authentik_postgres.env
      - env/hass_postgre.env
      - env/graphana_postgre.env
    networks:
      - backbone
  
  pgadmin:
    image: dpage/pgadmin4:6.9
    restart: unless-stopped
    env_file:
      - env/pgadmin.env
      - env/pgadmin_oauth.env
    user: "${UID:-1000}:${GID:-1000}"
    volumes:
      - ${DATA_DIRECTORY:-./data}/pgadmin:/var/lib/pgadmin:rw
      - ./config/pgadmin/config_local.py:/pgadmin4/config_local.py:ro
      - ${DATA_DIRECTORY:-./data}/ssl/internal/certs/pgadmin/pgadmin.pem:/certs/server.cert:ro
      - ${DATA_DIRECTORY:-./data}/ssl/internal/certs/pgadmin/privkey.pem:/certs/server.key:ro
    depends_on:
      - database
    networks:
      - mgnmt
      - auth
      - backbone

  certbot:
    build:
      dockerfile: certbot.dockerfile
      context: images/certbot
    restart: unless-stopped
    volumes:
      - ${DATA_DIRECTORY:-./data}/certwww/:/var/www/certbot/:rw
      - ${DATA_DIRECTORY:-./data}/ssl/public/:/etc/letsencrypt/:rw
      - ./config/cronjobs/certbot.cron:/cronjob/root:ro

    env_file:
      - env/certbot.env
    networks:
      - mgnmt
    ports:
      - 8556:8556

  duckdns:
    image: linuxserver/duckdns:latest
    restart: unless-stopped
    env_file:
      - env/duckdns.env

  nginx:
    image: nginx:stable-alpine
    restart: unless-stopped
    ports:
      - 443:443
      - 80:80
    volumes:
      - ./config/nginx:/etc/nginx/conf.d:ro
      - ${DATA_DIRECTORY:-./data}/ssl/internal/ca_intermediate/intermediate_ca_fullchain.pem:/etc/ca/intermediate_ca_fullchain.pem:ro
      - ${DATA_DIRECTORY:-./data}/ssl/public:/etc/ssl/:ro
      - ${DATA_DIRECTORY:-./data}/certwww:/var/www/certbot:rw
    depends_on:
      - authentik-server
      - homeassistant
    networks:
      - auth
      - ingress
      - hass
      - mgnmt
  
  redis:
    image: redis:7.0.0-alpine
    restart: unless-stopped
    entrypoint: /bin/sh
    command: /init/init.sh
    env_file:
      - env/authentik_redis.env
    networks:
      - auth
    volumes:
      - ./one_time_config/redis.init/:/init:ro

  authentik-server:
    image: ghcr.io/goauthentik/server:2022.5.2
    restart: unless-stopped
    depends_on:
      - cfssl
      - database
      - redis
      - geoipupdate
    entrypoint: /bin/sh
    command: /init/init.sh
    env_file:
      - env/authentik.env
      - env/authentik_postgres.env
      - env/authentik_redis.env
      - env/hass_user.env
      - env/hass_web.env
      - env/pgadmin_oauth.env
      - env/vscode.env
      - env/portainer.env
      - env/rclone.env
      - env/graphana.env
    volumes:
      - ./one_time_config/authentik.init/:/init:ro
      - ${DATA_DIRECTORY:-./data}/authentik/media:/media:rw
      - ${DATA_DIRECTORY:-./data}/authentik/custom-templates:/templates:rw
      - ${DATA_DIRECTORY:-./data}/geoip:/geoip:rw
    networks:
      - backbone
      - auth
    ports:
      - 9000:9443
  
  authentik-worker:
    image: ghcr.io/goauthentik/server:2022.5.2
    restart: unless-stopped
    command: worker
    depends_on:
      - cfssl
      - database
      - redis
      - geoipupdate
    env_file:
      - env/authentik.env
      - env/authentik_postgres.env
      - env/authentik_redis.env
    user: root
    volumes:
      - ${DATA_DIRECTORY:-./data}/authentik/media:/media:rw
      - ${DATA_DIRECTORY:-./data}/authentik/custom-templates:/templates:rw
      - ${DATA_DIRECTORY:-./data}/ssl/internal/certs/authentik-server:/certs/authentik-server:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${DATA_DIRECTORY:-./data}/geoip:/geoip:rw
    networks:
      - backbone
      - auth
  
  geoipupdate:
    image: "maxmindinc/geoipupdate:v4.9"
    restart: unless-stopped
    volumes:
      - ${DATA_DIRECTORY:-./data}/geoip:/usr/share/GeoIP:rw
    env_file:
      - env/geoip.env
    networks:
      - auth

  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:2022.5.4
    restart: unless-stopped
    privileged: true
    environment:
        - TZ=Europe/Rome
    volumes:
        - ./config/homeassistant/config:/config/config:rw
        - ./config/homeassistant/configuration.yaml:/config/configuration.yaml:rw
        - ./config/homeassistant/secrets.yaml:/config/secrets.yaml:rw
        - ${DATA_DIRECTORY:-./data}/homeassistant/.cloud/:/config/.cloud:rw
        - ${DATA_DIRECTORY:-./data}/homeassistant/.storage/:/config/.storage:rw
        - ${DATA_DIRECTORY:-./data}/homeassistant/blueprints/:/config/blueprints:rw
        - ${DATA_DIRECTORY:-./data}/homeassistant/custom_components/:/config/custom_components:rw
        - ${DATA_DIRECTORY:-./data}/homeassistant/tts/:/config/tts:rw
        - ${DATA_DIRECTORY:-./data}/ssl/internal/certs/homeassistant:/etc/ssl/:ro
        - ${DATA_DIRECTORY:-./data}/ssl/internal/ca_intermediate/intermediate_ca_fullchain.pem:/ssl/ca.pem
        - ./external/hass-auth-header/custom_components/auth_header:/config/custom_components/auth_header:ro
        - ${DATA_DIRECTORY:-./data}/homeassistant/influx/:/config/influx:rw
        - ${DATA_DIRECTORY:-./data}/homeassistant/media:/media:rw
    env_file:
      - env/hass_postgre.env
      - env/hass_user.env
      - env/hass_web.env
      - env/influxdb.env
    networks:
      - backbone
      - hass
    depends_on:
      - influxdb
  
  vscode:
    image: linuxserver/code-server:4.4.0
    restart: unless-stopped
    networks:
      - mgnmt
    volumes:
      - ./config/vscode/:/config/.config/code-server:ro
      - ./config:/workspace:rw
      - ./docker-compose.yml:/workspace/docker-compose.yml:rw
      - ${DATA_DIRECTORY:-./data}/ssl/internal/certs/vscode:/etc/ssl:ro
    environment:
      - DEFAULT_WORKSPACE=/workspace
      - PUID=1000
      - PGID=1000
    env_file:
      - env/vscode.env
  
  portainer:
    image: portainer/portainer-ce:2.13.1-alpine
    command: --ssl --sslcert /etc/ssl/fullchain.pem --sslkey /etc/ssl/privkey.pem
    networks:
      - mgnmt
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${DATA_DIRECTORY:-./data}/portainer:/data:rw
      - ${DATA_DIRECTORY:-./data}/ssl/internal/certs/portainer/:/etc/ssl/:ro
    env_file:
      - env/portainer.env

  rclone:
    build:
      dockerfile: rclone.dockerfile
      context: images/rclone
    restart: unless-stopped
    ports:
      - "5572:5572"
    volumes:
      - ./config/rclone:/config/rclone:rw
      - ${DATA_DIRECTORY:-./data}/rclone/logs:/logs:rw
      - ${DATA_DIRECTORY:-./data}/ssl/internal/certs/rclone:/ssl:ro
      - ${DATA_DIRECTORY:-./data}:/backup/data:rw
      - ./config:/backup/config:rw
      - ./config/cronjobs/rclone.cron:/cronjob/root:ro
    environment:
      - PHP_TZ=Europe/Rome
      - PUID=0
      - PGID=0
    env_file:
      - env/rclone.env
    networks:
      - mgnmt

  prometheus:
    image: prom/prometheus:v2.35.0
    restart: unless-stopped
    volumes:
      - ./config/prometheus:/etc/prometheus:ro
      - ${DATA_DIRECTORY:-./data}/prometheus:/prometheus:rw
    networks:
      - mgnmt
      - auth
  
  graphana:
    image: grafana/grafana-oss:8.5.2
    restart: unless-stopped
    networks:
      - mgnmt
      - auth #temporary
      - backbone
    volumes:
      - ${DATA_DIRECTORY:-./data}/graphana:/var/lib/grafana:rw
      - ./config/graphana:/etc/grafana
      - ./one_time_config/graphana.init/:/etc/grafana/provisioning/:ro
      - ${DATA_DIRECTORY:-./data}/ssl/internal/certs/graphana:/ssl:ro
    env_file:
      - env/graphana.env
      - env/graphana_postgre.env

  prometheus-postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:v0.10.1
    restart: unless-stopped
    env_file:
      - env/postgre.env
    networks:
      - mgnmt
      - backbone
  
  prometheus-nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.10.0
    restart: unless-stopped
    networks:
      - mgnmt
    command: -nginx.scrape-uri=http://nginx:8080/stub_status

  influxdb:
    image: influxdb:2.2-alpine
    restart: unless-stopped
    volumes:
        - ./config/influxdb:/etc/influxdb2
        - ${DATA_DIRECTORY:-./data}/ssl/internal/certs/influxdb:/ssl:ro
        - ${DATA_DIRECTORY:-./data}/homeassistant/influx/:/config/influx:rw
        - ${DATA_DIRECTORY:-./data}/influxdb:/root/.influxdbv2:rw
        - ./one_time_config/influx.init:/init:rw
    networks:
      - backbone
    environment:
      - INFLUXD_CONFIG_PATH=/etc/influxdb2
    ports:
      - 8086:8086
    env_file:
      - env/influxdb.env
    entrypoint: /bin/sh /init/init.sh

  mosquitto:
    image: eclipse-mosquitto
    volumes:
      - ./config/mosquitto:/mosquitto/config
      - ${DATA_DIRECTORY:-./data}/mosquitto:/mosquitto/data
      - ${DATA_DIRECTORY:-./data}/ssl/internal/ca_intermediate/intermediate_ca_fullchain.pem:/etc/ssl/ca.pem
      - ${DATA_DIRECTORY:-./data}/ssl/internal/certs/mosquitto:/etc/mosquitto/certs
      - ${DATA_DIRECTORY:-./data}/ssl/internal/certs/zigbee:/zigbee/cert
    restart: unless-stopped
    networks:
      - hass
  
  zigbee:
    image: koenkk/zigbee2mqtt
    restart: unless-stopped
    volumes:
      - ./config/zigbee2mqtt/configuration.yaml:/app/data/configuration.yaml
      - ./config/zigbee2mqtt/secret.yaml:/app/data/secret.yaml
      - ${DATA_DIRECTORY:-./data}/zigbee2mqtt:/app/data
      - ${DATA_DIRECTORY:-./data}/ssl/internal/ca_intermediate/intermediate_ca_fullchain.pem:/ssl/ca/intermediate_ca_fullchain.pem:ro
      - ${DATA_DIRECTORY:-./data}/ssl/internal/certs/zigbee:/ssl/cert
      - /run/udev:/run/udev:ro
    environment:
      - TZ=Europe/Rome
    networks:
      - hass
    devices:
      - ${ZIGBEE_COORDINATOR:-/dev/ttyUSB0}:/dev/ttyACM0


networks:
  backbone:
    ipam:
      config:
        - subnet: 172.0.0.0/16
  auth:
    ipam:
      config:
        - subnet: 172.1.0.0/16
  ingress:
    ipam:
      config:
        - subnet: 172.254.0.0/16
  hass:
    ipam:
      config:
        - subnet: 172.2.0.0/16
  mgnmt:
    ipam:
      config:
        - subnet: 172.253.0.0/16